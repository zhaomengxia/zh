server:
  servlet:
    context-path: /zh

  #https 配置，在生产中使用https  具体解释https ：传输层安全性（TLS）是HTTPS的官方名称，也可能听过它为SSL（安全套接字层），SSL这个名称已经被弃用，TLS是一种加密协议，通过计算机网络提供安全通信
  #主要目标确保计算机应用程序之间的隐私和数据的完整性 下面这段就够了
#  port: 443
#  ssl:
#    key-store: classpath:keystore.p12
#    key-store-password: 123456
#    key-store-type: PKCS12
#    key-alias: zh

#指定当前启动环境
#spring:
#  profiles:
#    active: @package.environment@
#下面默认是启动dev 开发环境
spring:
  profiles:
    active: dev
  #指定项目静态资源路径
  resources:
    static-locations: /META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${file.upload-path}
  #session 相关配置
  session:
    timeout: 3600
    redis:
      namespace: zh-session
#使用OpenID Connect进行身份验证如果使用OIDC进行身份验证，则无需担心如何存储用户、密码或对用户进行身份验证。
#相反，你可以使用身份提供商（IdP）为你执行此操作，你的IdP甚至可能提供多因素身份验证（MFA）等安全附加组件
#使用它，你需要向项目添加一些依赖项，然后在application.yml文件中配置一些属性。这是保护 Spring Boot 应用的方法之一
#  security:
#    cauth2:
#      client:
#        registration:
#          okta:
#            client-id: {clientId}
#            client-secret: {clientSecret}
#        provider:
#           okta:
#              issuer-uri: https://{yourOktaDomain}/oauth2/default
#mybatis
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.zh.entity
  #typeEnumsPackage: com.baomidou.springboot.entity.enums
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)",   UUID:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #数据库是否开启大写命名
      capital-mode: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
    #关闭banner打印
    banner: false
    #是否缓存 Sql 解析，默认不缓存
    sql-parser-cache: true
  # 原生配置
  configuration:
    #是否开启自动驼峰命名规则
    map-underscore-to-camel-case: true
#    cache-enabled: false
#security
security:
  web:
    ignore:
      - /swagger-ui.html
      - /webjars/**
      - /v2/**
      - /swagger-resources/**
      - /**/*.*
      - /login
      - /logout
      - /authentication/check
      - /verification/code
      - ${websocket.endpoint.path}/**
    loginProcessingUrl: /authentication/login
    logoutUrl: /authentication/logout
    #权限表达式
    access: '@permissionService.hasPermission(request,authentication)'
  session:
    #允许登陆限制人数
    maximumSessions: 10
    #不允许重复登陆
    notAllowLogin: false
    #记住我时间 单位：s 默认 14天
    #remember_time: 60
  #验证码登陆配置
  #code:
    #验证码长度 默认4位
    #length: 4
    #过期时间（单位：s） 默认2分钟
    #expiredTime: 120

#websocket
websocket:
  endpoint:
    path: /websocket
#在线预览服务访问路径 外网访问
onlinePreview:
  url:

#忽略swagger异常
logging:
  level:
    io.swagger.models.parameters.AbstractSerializableParameter: error
#气象预警
meteorological:
  warning:
    url: http://www.weather.com.cn/data/alarm_xml/alarminfo.xml